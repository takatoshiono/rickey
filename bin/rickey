#!/usr/bin/env ruby

require 'Thor'
require 'rickey'
require 'flickraw'
require 'dotenv'

class RickeyCommand < Thor
  desc 'show [albums|photos] --album [AlbumId]', 'Show iPhoto albums and photos.'
  method_option :album, type: :numeric, desc: 'Album id. This is required when showing photos'
  def show(target)
    p "This is show command. Target is '#{target}'"
    p options
  end

  desc 'tag [ratings]', 'Add rating tags for flickr photos'
  def tag(target)
    p "This is tag command. Target is '#{target}'"
    p options

    login_flickr

    photos = flickr.photos.search(
      user_id: 'me',
      text: 'CIMG1402',
    )

    p photos
  end

  def login_flickr
    FlickRaw.api_key = ENV['FLICKR_API_KEY']
    FlickRaw.shared_secret = ENV['FLICKR_API_SECRET']

    token = flickr.get_request_token
    auth_url = flickr.get_authorize_url(token['oauth_token'], perms: 'write')

    puts "Authorization url: #{auth_url}"
    ask 'Press any key to open:'
    `open '#{auth_url}'`
    verify = ask "Enter authorization code:"

    begin
      flickr.get_access_token(token['oauth_token'], token['oauth_token_secret'], verify)
      login = flickr.test.login
      puts "You are now authenticated as #{login.username} with token #{flickr.access_token} and secret #{flickr.access_secret}"
      append_to_dotenv(
        FLICKR_ACCESS_TOKEN: flickr.access_token,
        FLICKR_ACCESS_SECRET: flickr.access_secret,
      )
    rescue FlickRaw::FailedResponse => e
      puts "Authentication failed : #{e.msg}"
      raise
    end
  end
end

def append_to_dotenv(settings)
  File.open('.env', 'a') do |f|
    settings.each do |k, v|
      f.puts "#{k.upcase}=#{v}"
    end
  end
end

Dotenv.load
RickeyCommand.start
